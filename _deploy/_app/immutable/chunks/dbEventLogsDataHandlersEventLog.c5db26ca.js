import{c as f}from"./logger.cb3e7472.js";import{r as k}from"./CommonItemMember.d32f367b.js";import{f as N,u as b}from"./progressRate.711e9bab.js";import{b as p}from"./dbBase.2eec5af3.js";function w(){return new Worker(""+new URL("../workers/db.worker-880a4e60.js",import.meta.url).href)}async function B(t){return new Promise(r=>{let e=new w;e.addEventListener("message",a=>(e.terminate(),f.finished(a.data.log),r(a.data.value))),e.postMessage(t)})}async function x(t,r,e,a){const u=y(t,r.name,e).map(n=>n.name);await t.transaction("rw",u,async()=>{if(e){const n=[],m=await N(t,r.name,"events");let l=[];for(const s of Object.keys(e)){const c=k(r.name,s),i=e[s].length;n.push(t.table(c).bulkPut(e[s])),m[s].recordCount+=i,l.push({...t.versionIdentifier,contractName:r.name,eventName:s,tableName:c,numOfRecords:i})}await Promise.all(n),l.length&&f.success("BulkPut Event Logs.",l),await b(t,r.name,"events",m)}await b(t,r.name,"fetchedBlockNumber",a)})}function y(t,r,e){let o=Object.keys(e).map(u=>{const n=k(r,u);return t.table(n)});return o.push(t.table(p.EventLog.syncStatus)),o}async function P(t,r,e){let a=await t.table(r).toArray();return e&&(a=d(a,e)),a}function d(t,r){return t&&(r==="asc"?t.sort((e,a)=>e.blockNumber!==a.blockNumber?e.blockNumber-a.blockNumber:e.logIndex-a.logIndex):t.sort((e,a)=>a.blockNumber!==e.blockNumber?a.blockNumber-e.blockNumber:a.logIndex-e.logIndex)),t}export{x as a,P as g,B as s};
